/*
 * FFV-C
 * Frontflow / violet Cartesian
 *
 *
 * Copyright (c) 2007-2011 VCAD System Research Program, RIKEN. 
 * All rights reserved.
 *
 * Copyright (c) 2011-2014 Institute of Industrial Science, The University of Tokyo. 
 * All rights reserved.
 *
 * Copyright (c) 2012-2014 Advanced Institute for Computational Science, RIKEN. 
 * All rights reserved.
 *
 */


SOFTWARE REQUIREMENT
====================

- MPI library
- Cartesian partition library
- Text parser library
- Cartesian I/O library
- Performance monitor library
- Polygon management library
- Cut information library



HOW TO BUILD
============

1. with configure

$ ./configure [options]
$ make
$ make install


It is strongly recommended to use wrapper compiler for convenience. For instance, if you
                           ^^^^^^^^^^^^^^^^^^^^^^^
want to compile with OpenMPI, compile OpenMPI library by a compiler you want to use before 
install related libraries (See section 3).



Configure options:

 --host=hostname
    Specify in case of cross-compilation.

 --prefix=INSTALL_DIR
    Specify a directory to be installed. The default directory is /usr/local/FFVC

 --with-cio=CIOLIB_DIR
    Specify the directory path that is installed CIO library.

 --with-comp=(INTEL|FJ|GNU)
    If Intel compiler is used, choose INTEL, and if Fujitsu compiler, specify FJ. 
    This option is mandatory when using both compilers.

 --with-cpm=CPMLIB_DIR
    Specify the directory path that is installed CPM library.

 --with-cut=CUTLIB_DIR
    Specify the directory path that Cut information library is installed.

 --with-precision=(single|double)
    Specify the REAL macro by selecting single(4bytes) or double(8bytes). If this 
    option is omitted, single precision will be applied.

 --with-ompi=OPENMPI_DIR
    If the OpenMPI library is used, specify the directory path that OpenMPI library is
    installed. This option will be required to use a native compiler. Instead, if the 
    wrapper compiler, e.g., mpicxx, is used to compile, this options can be eliminated.

 --with-parser=TEXTPARSER_PATH
    Specify the directory path that is installed TextParser library.

 --with-pm=PMLIB_DIR
    Specify the directory path that Performance Monitor library is installed. This 
    option is required if only you need a performance report.

 --with-polylib=POLYLIB_DIR
    Specify the directory path that Polygon management library is installed.


 CC=C_COMPILER
    Specify a C compiler.

 CFLAGS=C_OPTIONS
    Specify compiler options.

 CXX=CXX_COMPILER
    Specify a C++ compiler, e.g., g++, icpc, xlc++ or others.

 CXXFLAGS=CXX_OPTIONS
    Specify compiler options.

 F90=FORTRAN90_COMPILER
    Specify a fortran90 compiler.

 F90FLAGS=FORTRAN90_OPTIONS
    Specify compiler options.

 LDFLAGS=LD_OPTIONS
    Specify directory path for Fortran libraries.



Here is examples.


## for OpenMPI compiled by INTEL compiler, wrapper compiler, openmp.

  $ ./configure \
      --prefix=/usr/local/FFV/FFVC \
      --with-cpm=/usr/local/FFV/CPMlib \
      --with-cio=/usr/local/FFV/CIOlib \
      --with-cut=/usr/local/FFV/Cutlib \
      --with-pm=/usr/local/FFV/PMlib \
      --with-polylib=/usr/local/FFV/Polylib \
      --with-parser=/usr/local/FFV/TextParser \
      --with-comp=INTEL \
      CC=mpicc \
      CFLAGS=-O3 \
      CXX=mpicxx \
      CXXFLAGS="-O3 -openmp -par-report=3 -vec-report=2" \
      F90=mpif90 \
      F90FLAGS="-O3 -Warn unused -fpp -openmp -par-report=3 -vec-report=2"


## for OpenMPI compiled by INTEL compiler, double precision, openmp.

  $ ./configure \
      --prefix=/usr/local/FFV/FFVC \
      --with-cpm=/usr/local/FFV/CPMlib \
      --with-cio=/usr/local/FFV/CIOlib \
      --with-cut=/usr/local/FFV/Cutlib \
      --with-pm=/usr/local/FFV/PMlib \
      --with-polylib=/usr/local/FFV/Polylib \
      --with-parser=/usr/local/FFV/TextParser \
      --with-comp=INTEL \
      --with-precision=double \
      CC=mpicc \
      CFLAGS=-O3 \
      CXX=mpicxx \
      CXXFLAGS="-O3 -openmp -par-report=3 -vec-report=2" \
      F90=mpif90 \
      F90FLAGS="-O3 -Warn unused -fpp -openmp -par-report=3 -vec-report=2"


## for GNU compiler

  $ ./configure \
      --prefix=/usr/local/FFV/FFVC \
      --with-cpm=/usr/local/FFV/CPMlib \
      --with-cio=/usr/local/FFV/CIOlib \
      --with-cut=/usr/local/FFV/Cutlib \
      --with-pm=/usr/local/FFV/PMlib \
      --with-polylib=/usr/local/FFV/Polylib \
      --with-parser=/usr/local/FFV/TextParser \
      --with-comp=GNU \
      CC=mpicc \
      CFLAGS=-O3 \
      CXX=mpicxx \
      CXXFLAGS="-O3 -fopenmp" \
      F90=mpif90 \
      F90FLAGS="-O3 -cpp -fopenmp -ffree-form"


## for K-computer

  $ ./configure \
      --prefix=/home/foo/FFVC \
      --with-cpm=/home/foo/CPMlib \
      --with-cio=/home/foo/CIOlib \
      --with-cut=/home/foo/Cutlib \
      --with-pm=/home/foo/PMlib \
      --with-polylib=/home/foo/Polylib \
      --with-parser=/home/foo/TextParser \
      --with-comp=FJ \
      --host=sparc64-unknown-linux-gnu \
      CC=mpifccpx \
      CFLAGS="-Kfast,ocl,preex,simd=2,uxsimd,array_private,parallel,openmp -Nsrc" \
      CXX=mpiFCCpx \
      CXXFLAGS="-Kfast,ocl,preex,simd=2,uxsimd,array_private,parallel,openmp,optmsg=2 -V -Nsrc"
      F90=mpifrtpx \
      F90FLAGS="-Cpp -Kfast,ocl,preex,simd=2,uxsimd,array_private,auto,parallel,openmp -Qt" \
      LDFLAGS="--linkfortran"





2. Hand compile

If a provided configure does not work, use Makefile_hand to build this library. At first,
edit a make_setting file to tell your machine environment.



3. OpenMPI compile with Intel compiler

$ ./configure --prefix=/opt/openmpi CC=icc CFLAGS=-O3 CXX=icpc CXXFLAGS=-O3 \
       F77=ifort FFLAGS=-O3 FC=ifort FCFLAGS=-O3


