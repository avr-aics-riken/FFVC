###################################################################################
#
# FFV-C : Frontflow / violet Cartesian
#
# Copyright (c) 2007-2011 VCAD System Research Program, RIKEN. 
# All rights reserved.
#
# Copyright (c) 2011-2014 Institute of Industrial Science, The University of Tokyo. 
# All rights reserved.
#
# Copyright (c) 2012-2014 Advanced Institute for Computational Science, RIKEN. 
# All rights reserved. 
#
###################################################################################

########################
# Common setting
########################

INSTALL_BASE = /usr/local/FFV

CPM_DIR  = $(INSTALL_BASE)/CPMlib
CIO_DIR  = $(INSTALL_BASE)/CIOlib
TP_DIR   = $(INSTALL_BASE)/TextParser
POLY_DIR = $(INSTALL_BASE)/Polylib
CUT_DIR  = $(INSTALL_BASE)/Cutlib
PM_DIR   = $(INSTALL_BASE)/PMlib
FFVC_DIR = $(INSTALL_BASE)/FFVC


#########################
# Architecture assignment
#########################

ARCH=intel


########################
# For each architecture
########################

ifeq ($(ARCH),gnu)
  AR          = ar cru
  RANLIB      = ranlib
  RM          = \rm -f
  MPI_DIR     = /opt/openmpi
  OMP_FLAGS   = -fopenmp 
  UDEF_OPT    =
  CC          = mpicc
  CFLAGS      = -O3
  CXX         = mpicxx
  CXXFLAGS    = -O3 $(OMP_FLAGS)
  FC          = mpif90
  FCFLAGS     = -O3 -ffree-form
  F90         = mpif90
  F90FLAGS    = -O3 -cpp $(OMP_FLAGS) -ffree-form
  LDFLAGS     = 
  LIBS        = -lgfortran
  UDEF_LIB_PATH_SPEC =
  UDEF_LIBS_SPEC     =
## iff double
#CFLAGS     += -D_REAL_IS_DOUBLE_
#CXXFLAGS   += -D_REAL_IS_DOUBLE_
#FCFLAGS    += 
#F90FLAGS   += 

endif


########################
ifeq ($(ARCH),fx)
  AR          = ar cr
  RANLIB      = ranlib
  RM          = \rm -f
  MPI_DIR     =
  OMP_FLAGS   =
  UDEF_OPT    = -D__K_FPCOLL -D__ARCH_FX
  CC          =  mpifccpx
  CFLAGS      = -Kfast,ocl,preex,simd=2,uxsimd,array_private,parallel,openmp -Nsrc
  CXX         = mpiFCCpx
  CXXFLAGS    = -Kfast,ocl,preex,simd=2,uxsimd,array_private,parallel,openmp,optmsg=2 -V -Nsrc
  FC          = mpifrtpx
  FCFLAGS     = -Cpp -Kfast,ocl,preex,simd=2,uxsimd,array_private,auto,parallel,openmp -Qt
  F90         = mpifrtpx
  F90FLAGS    = -Cpp -Kfast,ocl,preex,simd=2,uxsimd,array_private,auto,parallel,openmp -Qt
  LDFLAGS     = --linkfortran
  LIBS        =
  UDEF_LIB_PATH_SPEC =
  UDEF_LIBS_SPEC     =

## iff double
#CFLAGS     += -D_REAL_IS_DOUBLE_
#CXXFLAGS   += -D_REAL_IS_DOUBLE_
#FCFLAGS    += -CcdRR8
#F90FLAGS   += -CcdRR8

endif


########################
ifeq ($(ARCH),ibm)
  AR          = ar crv
  RANLIB      = ranlib
  RM          = \rm -f
  MPI_DIR     = /opt/openmpi
  OMP_FLAGS   = -qsmp=omp
  UDEF_OPT    = -WF
  CC          = mpixlc_r
  CFLAGS      = -O3 -qarch=450d -qtune=450
  CXX         = mpixlcxx_r
  CXXFLAGS    = -O3 -qarch=450d -qtune=450 $(OMP_FLAGS)
  FC          = mpixlf90_r
  FCFLAGS     = -O3 -qarch=450d -qtune=450 -qextname
  F90         = mpixlf90_r
  F90FLAGS    = -O3 -qarch=450d -qtune=450 -qextname -qsuffix=f=f90:cpp=f90 $(OMP_FLAGS)
  LDFLAGS     =
  LIBS        =
  UDEF_LIB_PATH_SPEC = -L/soft/apps/ibmcmp/xlf/bg/11.1/bglib
  UDEF_LIBS_SPEC     = -lxlopt -lxl -lxlf90 -lxlfmath
## iff double
#CFLAGS     += -D_REAL_IS_DOUBLE_
#CXXFLAGS   += -D_REAL_IS_DOUBLE_
#FCFLAGS    += 
#F90FLAGS   += 

endif


########################
ifeq ($(ARCH),intel)
  AR          = ar cru
  RANLIB      = ranlib
  RM          = \rm -f
  MPI_DIR     = /opt/openmpi
  OMP_FLAGS   = -openmp -par-report=3 -vec-report=2
  UDEF_OPT    =
  CC          = mpicc
  CFLAGS      = -O3
  CXX         = mpicxx
  CXXFLAGS    = -O3 $(OMP_FLAGS)
#  FC          = ifort
#  FCFLAGS     = -O3
  F90         = mpif90
  F90FLAGS    = -O3 -Warn unused -fpp $(OMP_FLAGS)
  LDFLAGS     =
  LIBS        = -lifport -lifcore
  UDEF_LIB_PATH_SPEC =
  UDEF_LIBS_SPEC     =

#LDFLAGS     = -L/opt/intel/composerxe/lib -lmpi_cxx // Linux
## iff double
#CFLAGS     += -D_REAL_IS_DOUBLE_
#CXXFLAGS   += -D_REAL_IS_DOUBLE_
#FCFLAGS    += 
#F90FLAGS   += 

#  CC          = icc
#  CFLAGS      = -O3
#  CXX         = icpc
#  CXXFLAGS    = -O3 $(OMP_FLAGS)
#  FC          = ifort
#  FCFLAGS     = -O3
#  F90         = ifort
#  F90FLAGS    = -O3 -Warn unused -fpp $(OMP_FLAGS)
#  LDFLAGS     = -L/opt/intel/composerxe/lib

endif


########################

UDEF_INC_PATH=-I. \
              -I./FFV \
              -I./F_CORE \
              -I./ASD \
              -I./IP \
              -I./FB \
              `$(CIO_DIR)/bin/cio-config --cflags` \
              `$(CPM_DIR)/bin/cpm-config --cflags` \
              `$(CUT_DIR)/bin/cut-config --cflags` \
              `$(POLY_DIR)/bin/polylib-config --cflags` \
              `$(PM_DIR)/bin/pm-config --cflags` \
              `$(TP_DIR)/bin/tp-config --cflags`  \
              -I$(MPI_DIR)/include

#              -I../PLOT3D \

              
UDEF_LIB_PATH=-L./FFV -lFFV \
              -L./F_CORE -lFCORE \
              -L./ASD -lASD \
              -L./IP -lIP \
              -L./FB -lFB \
              `$(CIO_DIR)/bin/cio-config --libs` \
              `$(CPM_DIR)/bin/cpm-config --libs` \
              `$(CUT_DIR)/bin/cut-config --libs` \
              `$(POLY_DIR)/bin/polylib-config --libs` \
              `$(PM_DIR)/bin/pm-config --libs` \
              `$(TP_DIR)/bin/tp-config --libs` \
              -L$(MPI_DIR)/lib \
              
#              -L../PLOT3D -lPLOT3D \

              
#UDEF_LIBS = -lmpi -lFFV -lFB -lIP -lFCORE -lASD $(UDEF_LIBS_SPEC)

#UDEF_LIBS_UTIL = -lmpi -lPLOT3D -lFB $(UDEF_LIBS_SPEC)


UDEF_LIBS = -lmpi $(UDEF_LIBS_SPEC)

UDEF_LIBS_UTIL = -lmpi $(UDEF_LIBS_SPEC)
